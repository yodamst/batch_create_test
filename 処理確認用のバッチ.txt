@echo off
setlocal enabledelayedexpansion

REM 1つ目の引数
SET arg1=%1

REM 2つ目の引数
SET arg2=%2

REM 引数の表示
echo 第1引数の表示: %arg1%
echo 第2引数の表示: %arg2%

REM 引数を使った計算
SET /A result=%arg1% + %arg2%
echo Sum of arguments: %result%

REM for文での変数設定
SET numbers=5,10,15,20
FOR %%A IN (%numbers%) DO (
    SET /A newValue=%%A * 2
    echo Number: %%A, Multiplied: !newValue!
)

REM 環境変数の表示
echo PATH: %PATH%

REM 最後
echo Script finished.
pause



REM 7/10(水)

for （オプション） %%アルファベット１文字 in (ループ処理の対象) do コマンド 
(オプション無し) ディレクトリ内を対象にとる

REM /d ディレクトリ（フォルダ）名を対象にとる
REM /r ディレクトリ名及びそのサブディレクトリ内（そのフォルダの中のファイル名やフォルダ名）を対象にとる
REM /l 値を指定して代入する
REM /f テキストファイル内の文章に対してトークンを取り出して代入する


REM オプションなし
for %%アルファベット１文字 in (対象) do コマンド


@echo off
for %%i in (*.bat) do (
echo ファイル名：%%i
type %%i|more
)
pause


REM 解説
REM １：オプションがない場合は、カレントディレクトリの中身を対象にする。
REM ２：%%iに代入するように指示。
REM ３：*.batで、拡張子がbatのファイル全てを検索する。
REM ４：○○.batが見つかったので、%%iに○○.batと代入してdo以降のコマンドを実行する。
REM ５：□□.batが見つかったので、%%iに□□.batと代入してdo以降のコマンドを実行する。
REM ６：*.batがないので、終了。
REM ７：コマンドではファイル名を表示、その下にそのファイルの中身を出力。そしてプロンプトの１番下の行に到達するたび一時停止。）



REM 値のループ
for /l %%i in (開始値、増分、終了値) do コマンド

for /l %%i in (0,5,50) do echo %%i


REM for文でなくても以下のコマンドでも可能

set i=1
:loop
コマンド
set /a i+=2
if %i% leq 10 goto loop


REM ・/lでは、開始値、増分、終了値を取ってループさせる。
REM ・必ずしもforを使う必要はない。
REM ・↑でも慣れると非常に便利。
REM ・多用されるので、少なくとも/lは読めるようにしておきたい。



トークンオプション〜 tokens 〜

for /f "トークンオプション" %%i in (処理の対象) do コマンド

REM トークンオプション一覧
REM tokens= 何番目のトークンを指定するか？
REM delims= トークンの区切り文字を指定
REM eol= この文字から始まる行を無視
REM skip= 先頭から指定された行数、スキップする。
REM usebackq コマンドの出力を対象にする
REM 基本的に、スペース（Tab）で区切られた文字列１つ１つのことをトークンと呼びます。

for /f "tokens=1,3" %%i in (○○.txt) do echo %%i %%j


REM ポイント
REM ２つ以上のトークンを指定したとき、２つ目以降のトークンは指定したアルファベットの次の文字が勝手に宣言、使用される。
REM 初めにiを指定したら次はj,k,l...とトークンの数だけ続く。
REM zの次の文字は存在しないので、x,yなどからトークンを指定するのは推奨されない。
REM また、例えば2,3,4,6番目のトークンを取りたいときは2-4,6と表記することもできる。
REM １番目のトークンだけを取得するときは、tokensを書く必要はなし。




トークンオプション〜 delims 〜

for /f "tokens=1,3 delims=:" %%i in (○○.txt) do echo %%i %%j

実行結果
1 2 3 4 5
a b c d e
a u
hhh o e


for /f "tokens=1,3 delims=:  " %%i in (○○.txt) do echo %%i %%j

実行結果
1 3
a c
a u
hhh g

REM ポイント
REM 区切り文字をスペースやタブ以外にも使う（空白も区切り文字に含める）場合、
REM delimsはオプションの最後に、スペースはさらにその最後（"の手前）に。スペースとタブ両方使う場合は、タブを先に書く。



REM 7/11(木)

トークンオプション〜 eol,skip 〜

for /l "tokens=1,3 eol=a" %%i in (○○.txt) do echo %%i %%j

実行結果
1 3
hhh ee:e

for /l "tokens=1,3 skip=2" in (○○.txt) do echo %%i %%j

実行結果
a:i:u:e:o
hhh ee:e


REM ポイント
REM eolで指定した文字から始まる行を無視、skipで指定した行数分先頭から無視



トークンオプション〜 usebackq 〜

for /f "usebackq tokens=1 delims==" %%i in (`set`) do echo %%i

REM usebackqを使用すると、コマンドプロンプト上で使用できるMSDOSコマンドの出力を対象とすることができる。

@echo off
mode con lines=40 cols=25
set
pause >nul
cls
for /f "usebackq tokens=1 delims==" %%i in (`set`) do echo %%i
pause >nul
